program: growth_recursive.py
project: TVC_examples
name: train_loss_growth_recursive_g_positive
description: HPO for train_loss growth recursive sequential g=0.02
method: bayes
metric:
  # See the  asset_pricing_sequential.py log_and_save
  name: hpo_objective 
  goal: minimize

parameters:
  # Fix parameters here:
  trainer.logger.offline:
    value: false # log online for W&B optimization
  trainer.max_time:
    value: 00:00:02:00  # these tests shouldn't take more than 2 minutes
  model.hpo_objective_name:
    value: train_loss
  model.always_log_hpo_objective:
    value: true
   # Stopping criteria
  trainer.callbacks.monitor:
    value: train_loss
  trainer.callbacks.stopping_threshold:
    value: 1.0e-8
  
  optimizer.lr:
    min: 0.01
    max: 1.0
  model.g:
    value: 0.02
  model.k_grid_min: 
    value: 0.8
  model.k_grid_max: 
    value: 3.5
  model.z_grid_min: 
    value: 0.8
  model.z_grid_max: 
    value: 1.8
  model.k_sim_grid_points: 
    value: 16
  model.z_sim_grid_points: 
    value: 8

  model.ml_model.class_path:
    value:  econ_layers.layers.FlexibleSequential
  model.ml_model.init_args.n_in:
    value: 2
  model.ml_model.init_args.n_out:
    value: 1
  model.ml_model.init_args.layers:
    value: 4
  model.ml_model.init_args.hidden_dim: 
    value: 128
  model.ml_model.init_args.hidden_bias: 
    value: true
  model.ml_model.init_args.last_bias: 
    value: true
  model.ml_model.init_args.activator.class_path:
    value: torch.nn.Tanh
  model.ml_model.init_args.last_activator.class_path:
    value: torch.nn.Softplus
  model.ml_model.init_args.OutputRescalingLayer.class_path:
    value: econ_layers.layers.RescaleOutputsByInput
  model.ml_model.init_args.InputRescalingLayer.class_path:
    value: econ_layers.layers.RescaleAllInputsbyInput
  
  